#!/usr/bin/expect -f
#
# This Expect script was generated by autoexpect on Tue Feb 14 07:32:04 2023
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
spawn $env(SHELL)
match_max 100000
expect -exact "\[?2004h\]0;neo@fedora: /run/media/neo/Neo/Projects/other/Neo_VPN/softether\[;32mâ”Œâ”€â”€(\[1;34mneoã‰¿fedora\[;32m)-\[\[0;1m/run/media/neo/Neo/Projects/other/Neo_VPN/softether\[;32m\]\r\r
\[;32mâ””â”€\[1;34m\$\[0m "
send -- "expect\r"
expect -exact "expect\r
\[?2004l\rexpect1.1> "
send -- ""
expect -exact "^C\r
\[?2004h\]0;neo@fedora: /run/media/neo/Neo/Projects/other/Neo_VPN/softether\[;32mâ”Œâ”€â”€(\[1;34mneoã‰¿fedora\[;32m)-\[\[0;1m/run/media/neo/Neo/Projects/other/Neo_VPN/softether\[;32m\]\r\r
\[;32mâ””â”€\[1;34m\$\[0m "
send -- "git add .\r"
expect -exact "git add .\r
\[?2004l\r\r
\[?2004h\]0;neo@fedora: /run/media/neo/Neo/Projects/other/Neo_VPN/softether\[;32mâ”Œâ”€â”€(\[1;34mneoã‰¿fedora\[;32m)-\[\[0;1m/run/media/neo/Neo/Projects/other/Neo_VPN/softether\[;32m\]\r\r
\[;32mâ””â”€\[1;34m\$\[0m "
send -- "git status\r"
expect -exact "git status\r
\[?2004l\rOn branch master\r
Your branch is up to date with 'origin/master'.\r
\r
Changes to be committed:\r
  (use \"git restore --staged <file>...\" to unstage)\r
	\[32mnew file:   script.exp\[m\r
	\[32mdeleted:    vpnserver/Authors.txt\[m\r
	\[32mdeleted:    vpnserver/ReadMeFirst_Important_Notices_cn.txt\[m\r
	\[32mdeleted:    vpnserver/ReadMeFirst_Important_Notices_en.txt\[m\r
	\[32mdeleted:    vpnserver/ReadMeFirst_Important_Notices_ja.txt\[m\r
	\[32mdeleted:    vpnserver/ReadMeFirst_License.txt\[m\r
\r
\r
\[?2004h\]0;neo@fedora: /run/media/neo/Neo/Projects/other/Neo_VPN/softether\[;32mâ”Œâ”€â”€(\[1;34mneoã‰¿fedora\[;32m)-\[\[0;1m/run/media/neo/Neo/Projects/other/Neo_VPN/softether\[;32m\]\r\r
\[;32mâ””â”€\[1;34m\$\[0m "
send -- "git commit -a "
expect -exact "a "
send -- "- "
expect -exact "\[K"
send -- "m 'refactor ;"
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- ": remove not required files from vpnserver'\r"
expect -exact ": remove not required files from vpnserver'\r
\[?2004l\r\[master bbcace5\] refactor: remove not required files from vpnserver\r
 6 files changed, 454 deletions(-)\r
 create mode 100644 softether/script.exp\r
 delete mode 100644 softether/vpnserver/Authors.txt\r
 delete mode 100644 softether/vpnserver/ReadMeFirst_Important_Notices_cn.txt\r
 delete mode 100644 softether/vpnserver/ReadMeFirst_Important_Notices_en.txt\r
 delete 